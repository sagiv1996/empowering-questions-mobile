type User {
  _id: ID!
  firebaseId: String!
  frequency: Frequency!
  gender: Genders!
  categories: [Categories!]!
}

enum Frequency {
  little
  normal
  extra
}

enum Genders {
  male
  female
}

enum Categories {
  selfConfidence
  relationship
  positiveFeelings
  communication
  spiritualQuestions
  career
  familyLife
  universityStudies
}

type Question {
  _id: ID!
  string: String!
  category: Categories!
  gender: Genders!
  avgRanking: Float
}

type Notification {
  isSuccess: Boolean!
}

type Query {
  findRandomQuestionsByUserId(userId: ID!, excludeIds: [ID!] = []): [Question!]!
  findQuestionById(questionId: ID!): Question!
  getUserById(userId: ID!): User!
}

type Mutation {
  upsertUser(
    firebaseId: String!
    fcm: String!
    frequency: Frequency!
    gender: Genders!
    categories: [Categories!]!
  ): User!
  triggerNotifications(usersIds: [ID!]!): Notification!
}
